name: automated-release-workflow
on:
  pull_request:
    branches: [release, uat]
    types : [closed]
    
jobs:
  increment-fetch-tag:
    if: github.event.pull_request.merged == true
    name: 'increment-fetch-tag'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: get the present release tag and increment it
      id: latest_release
      run: echo "::set-output name=tag::$(bash scripts/fetch-tag.sh)"
    outputs:
      release_tag: ${{steps.latest_release.outputs.tag}}

  create-release:
    name: 'create-release'
    runs-on: ubuntu-latest
    needs: [increment-fetch-tag]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        with:
          tag_name: ${{ needs.increment-fetch-tag.outputs.release_tag }}
          release_name: ${{ needs.increment-fetch-tag.outputs.release_tag }}
          draft: false
          prerelease: true

  frontend-img-build:
    name: 'Building frontend docker images'
    runs-on: ubuntu-latest
    needs: [increment-fetch-tag]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - uses: actions/checkout@v2
      - name: Pushing mcd-discount-staging-frontend image to ECR
        env:
          ECR_REGISTRY: 059014103288.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: mcd-discount-staging-frontend
          IMAGE_TAG: ${{needs.increment-fetch-tag.outputs.release_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f env/docker_mcdui/Dockerfile .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

  backend-img-build:
    name: 'Building backend docker images'
    runs-on: ubuntu-latest
    needs: [increment-fetch-tag]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - uses: actions/checkout@v2
      - name: Pushing mcd-discount-staging-backend image to ECR
        env:
          ECR_REGISTRY: 059014103288.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: mcd-discount-staging-backend
          IMAGE_TAG: ${{needs.increment-fetch-tag.outputs.release_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f env/docker_mcdapi/Dockerfile .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

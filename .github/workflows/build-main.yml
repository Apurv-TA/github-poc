# name: production-build-workflow

# on:
#   release:
#     types: [published]

# jobs:
#   fetch-tag:
#     if: github.event.release.target_commitish == 'main'
#     name : Get release tag
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Building release tag
#         id: latest_tag
#         run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
#     outputs:
#       release_tag: ${{steps.latest_tag.outputs.tag}}

#   frontend-img-build:
#     needs: [fetch-tag]
#     runs-on: ubuntu-latest
#     name: 'Frontend docker images'
#     steps:
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1
#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#       - uses: actions/checkout@v2
#       - name: Building and pushing mcd-discount-frontend image to ECR
#         env:
#           ECR_REGISTRY: 059014103288.dkr.ecr.us-east-1.amazonaws.com
#           ECR_REPOSITORY: mcd-discount-prod-frontend
#           IMAGE_TAG: ${{needs.fetch-tag.outputs.release_tag }}
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f env/docker_mcdui/Dockerfile .
#           docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

name: alpha release workflow
on:
  pull_request:
    branches: [release, uat]
    types : [closed]
    
jobs:
  fetch-tag:
    if: github.event.pull_request.merged == true
    name: 'fetch-tag'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: get the present release tag and increment it
      id: latest_release
      run: echo "::set-output name=tag::$(bash scripts/fetch-tag.sh)"
    outputs:
      release: ${{steps.latest_release.outputs.tag}}

  create-release:
    name: 'create-release'
    runs-on: ubuntu-latest
    needs: [fetch-tag]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.fetch-tag.outputs.release }}
          release_name: Release ${{ needs.fetch-tag.outputs.release }}
          draft: false
          prerelease: false






  # fetch-branch-name:
  #   name: Extract branch name
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Extract branch name
  #     id: current_branch
  #     run: echo "::set-output name=branch::$(echo ${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}})"
  #   outputs:
  #       latest_branch: ${{steps.current_branch.outputs.branch}}

  # get-tag:
  #   name: Get the tag for docker image
  #   runs-on: ubuntu-latest
  #   needs: [tag-release, fetch-branch-name]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Get the tag for Docker image
  #     id: image_tag
  #     env:
  #       TAG: ${{needs.tag-release.outputs.current_release}}
  #       BRANCH: ${{needs.fetch-branch-name.outputs.latest_branch}}
  #     run: echo "::set-output name=tag::$(bash scripts/branch.sh -b $BRANCH -v $TAG)"
  #   outputs:
  #     release_tag: ${{steps.image_tag.outputs.tag}}

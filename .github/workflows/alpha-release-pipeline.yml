name: alpha release workflow
on:
  pull_request:
    branches: [release, uat]
    types : [closed]
    
jobs:
  fetch-tag:
    if: github.event.pull_request.merged == true
    name: 'fetch-tag'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: get the present release tag and increment it
      id: latest_release
      run: echo "::set-output name=tag::$(bash scripts/fetch-tag.sh)"
    outputs:
      release_tag: ${{steps.latest_release.outputs.tag}}

  create-release:
    name: 'create-release'
    runs-on: ubuntu-latest
    needs: [fetch-tag]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.fetch-tag.outputs.release_tag }}
          release_name: Release ${{ needs.fetch-tag.outputs.release_tag }}
          draft: false
          prerelease: false

  build-docker-backend:
    name: 'Building the backend docker image'
    runs-on: ubuntu-latest
    needs: [fetch-tag]
    steps:
      - uses: actions/checkout@v2
      - name: Building and tagging the backend docker image
        env:
          IMAGE_TAG: ${{needs.fetch-tag.outputs.release_tag }}
        run: |
          docker build -t mcdapi:$IMAGE_TAG -f env/docker_mcdapi/Dockerfile .

  build-docker-frontend:
    name: 'Building the frontend docker image'
    runs-on: ubuntu-latest
    needs: [fetch-tag]
    steps:
      - uses: actions/checkout@v2
      - name: Building and tagging the frontend docker image
        env:
          IMAGE_TAG: ${{needs.fetch-tag.outputs.release_tag }}
        run: |
          docker build -t mcdui:$IMAGE_TAG -f env/docker_mcdui/Dockerfile .

  build-docker-nginx:
    name: 'Building the nginx docker image'
    runs-on: ubuntu-latest
    needs: [fetch-tag]
    steps:
      - uses: actions/checkout@v2
      - name: Building and tagging the nginx docker image
        env:
          IMAGE_TAG: ${{needs.fetch-tag.outputs.release_tag }}
        run: |
          docker build -t mcd-nginx:$IMAGE_TAG -f env/docker_nginx/Dockerfile .



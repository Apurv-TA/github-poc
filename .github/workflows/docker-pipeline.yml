name: final workflow by merge
on:
  pull_request:
    branches: [release, uat, qa, dev*]
    types : [closed]
  push:
    branches: [dev*]
    
jobs:  
  tag-release:
    if: github.event.pull_request.merged == true
    name: 'tag-release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: version
      run: echo "::set-output name=tag::$(bash scripts/auto_release_tag.sh)"
      id: current_tag
    outputs:
        current_tag: ${{steps.current_tag.outputs.branch}}

  fetch-branch-name:
    name: Extract branch name
    runs-on: ubuntu-latest
    steps:
    - name: Extract branch name
      run: echo "::set-output name=branch::$(echo ${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}})"
      id: current_branch
    outputs:
        current_branch: ${{steps.current_branch.outputs.branch}}

  get-tag:
    name: Get the tag for docker image
    runs-on: ubuntu-latest
    needs: [tag-release, fetch-branch-name]
    steps:
    - uses: actions/checkout@v3
    - name: Get the tag for Docker image
      id: image_tag
      env:
        CURRENT_TAG: ${{needs.tag-release.outputs.current_tag}}
        CURRENT_BRANCH: ${{needs.tag-release.outputs.current_branch}}
      run: echo "::set-output name=tag::$(bash scripts/branch.sh -b $CURRENT_BRANCH -v CURRENT_TAG)"
    outputs:
      release_tag: ${{steps.image_tag.outputs.tag}}

  build-docker-backend:
    name: 'Building the backend docker image'
    runs-on: ubuntu-latest
    needs: [get-tag]
    steps:
      - uses: actions/checkout@v2
      - name: Building and tagging the backend docker image
        env:
          IMAGE_TAG: ${{needs.get-tag.outputs.release_tag }}
        run: |
          docker build -t mcdapi:$IMAGE_TAG -f env/docker_mcdapi/Dockerfile .

  build-docker-frontend:
    name: 'Building the frontend docker image'
    runs-on: ubuntu-latest
    needs: [get-tag]
    steps:
      - uses: actions/checkout@v2
      - name: Building and tagging the frontend docker image
        env:
          IMAGE_TAG: ${{needs.get-tag.outputs.release_tag }}
        run: |
          docker build -t mcdui:$IMAGE_TAG -f env/docker_mcdui/Dockerfile .

  build-docker-nginx:
    name: 'Building the nginx docker image'
    runs-on: ubuntu-latest
    needs: [get-tag]
    steps:
      - uses: actions/checkout@v2
      - name: Building and tagging the nginx docker image
        env:
          IMAGE_TAG: ${{needs.get-tag.outputs.release_tag }}
        run: |
          docker build -t nginx:$IMAGE_TAG -f env/docker_nginx/Dockerfile .

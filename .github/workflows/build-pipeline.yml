name: build-workflow

on:
  release:
    types: [published]

defaults:
  run:
    working-directory: .

jobs:
  fetch-tag:
    if: github.event.release.target_commitish == 'main' || github.event.release.target_commitish == 'dev' || github.event.release.target_commitish == 'release' || github.event.release.target_commitish == 'test'
    name : Get release tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Building release tag
        id: latest_tag
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
      - name: configure the ecr used
        id: branch_ecr
        env:
          branch: ${{ github.event.release.target_commitish }}
        run: |
          if [ "$branch" == "main" ]
          then
            echo ::set-output name=ecr::$(echo mcd-discount-prod)
          else
            echo $branch
            echo ::set-output name=ecr::$(echo mcd-discount-staging)
          fi
    outputs:
      release_tag: ${{steps.latest_tag.outputs.tag}}
      ecr_repo: ${{steps.branch_ecr.outputs.ecr}}

  frontend-img-build:
    needs: [fetch-tag]
    name: 'Building frontend docker images'
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
#           path: /env/docker_mcdui/
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: /env/docker_mcdui/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: 059014103288.dkr.ecr.us-east-1.amazonaws.com/${{ needs.fetch-tag.outputs.ecr_repo }}-frontend:${{needs.fetch-tag.outputs.release_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
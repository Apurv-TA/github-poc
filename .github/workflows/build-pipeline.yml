name: build-workflow

on:
  release:
    types: [published]

jobs:
  fetch-tag:
    if: github.event.release.target_commitish == 'main' || github.event.release.target_commitish == 'dev'
    name : Get release tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Building release tag
        id: latest_tag
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
    outputs:
      release_tag: ${{steps.latest_tag.outputs.tag}}

  # fetch-ecr-repo:
  #   if: github.event.release.target_commitish == 'main' || github.event.release.target_commitish == 'dev'
  #   name : Get ECR repo
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: configuration for main branch
  #       if: github.event.release.target_commitish == 'main'
  #       id: ecr-repo
  #       run: echo ::set-output name=repo::$(echo "mcd-discount-prod")
  #     - name: configuration for dev branch
  #       if: github.event.release.target_commitish == 'dev'
  #       id: ecr-repo
  #       run: echo ::set-output name=repo::$(echo "mcd-discount-staging")
  #   outputs:
  #     ecr_repo: ${{steps.fetch-ecr-repo.outputs.repo}}

  # frontend-img-build:
  #   name: 'Building frontend docker images'
  #   runs-on: ubuntu-latest
  #   needs: [fetch-tag, fetch-ecr-repo]
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
  #     - uses: actions/checkout@v2
  #     - name: Pushing mcd-discount-frontend image to ECR
  #       env:
  #         ECR_REGISTRY: 059014103288.dkr.ecr.us-east-1.amazonaws.com
  #         ECR_REPOSITORY: ${{ needs.fetch-ecr-repo.outputs.ecr_repo }}-frontend
  #         IMAGE_TAG: ${{needs.fetch-tag.outputs.release_tag }}
  #       run: |
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f env/docker_mcdui/Dockerfile .
  #         docker push -a $ECR_REGISTRY/$ECR_REPOSITORY


  # backend-img-build:
  #   name: 'Building backend docker images'
  #   runs-on: ubuntu-latest
  #   needs: [fetch-tag, fetch-ecr-repo]
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
  #     - uses: actions/checkout@v2
  #     - name: Pushing mcd-discount-backend image to ECR
  #       env:
  #         ECR_REGISTRY: 059014103288.dkr.ecr.us-east-1.amazonaws.com
  #         ECR_REPOSITORY: ${{ needs.fetch-ecr-repo.outputs.ecr_repo }}-backend
  #         IMAGE_TAG: ${{needs.fetch-tag.outputs.release_tag }}
  #       run: |
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f env/docker_mcdapi/Dockerfile .
  #         docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
